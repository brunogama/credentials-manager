#!/usr/bin/env bats
# dump_api_keys.bats - Unit tests for dump-api-keys script

load test_helper

DUMP_API_KEYS_SCRIPT="${PROJECT_ROOT}/dump-api-keys"

@test "dump-api-keys script exists and is executable" {
  assert_script_exists "$DUMP_API_KEYS_SCRIPT"
}

@test "dump-api-keys script has valid bash syntax" {
  check_script_syntax "$DUMP_API_KEYS_SCRIPT"
}

@test "dump-api-keys script passes shellcheck" {
  check_script_shellcheck "$DUMP_API_KEYS_SCRIPT"
}

@test "dump-api-keys shows usage with --help flag" {
  run "$DUMP_API_KEYS_SCRIPT" --help
  [ "$status" -eq 0 ]
  [[ "$output" =~ "Usage:" ]]
}

@test "dump-api-keys shows usage with -h flag" {
  run "$DUMP_API_KEYS_SCRIPT" -h
  [ "$status" -eq 0 ]
  [[ "$output" =~ "Usage:" ]]
}

@test "dump-api-keys rejects unknown option" {
  run "$DUMP_API_KEYS_SCRIPT" --unknown-option
  [ "$status" -eq 1 ]
  [[ "$output" =~ "Unknown option" ]]
}

@test "dump-api-keys exports all API keys by default" {
  run "$DUMP_API_KEYS_SCRIPT"
  [ "$status" -eq 0 ]
  [[ "$output" =~ "export TEST_API_KEY=" ]]
  [[ "$output" =~ "export SERVICEA_API_KEY=" ]]
  [[ "$output" =~ "export AWS_API_KEY=" ]]
}

@test "dump-api-keys exports correct key values" {
  run "$DUMP_API_KEYS_SCRIPT"
  [ "$status" -eq 0 ]
  [[ "$output" =~ "export TEST_API_KEY=test-api-key-12345" ]]
  [[ "$output" =~ "export SERVICEA_API_KEY=servicea-key-67890" ]]
  [[ "$output" =~ "export AWS_API_KEY=aws-key-abcdef" ]]
}

@test "dump-api-keys filters by pattern" {
  run "$DUMP_API_KEYS_SCRIPT" --pattern "AWS"
  [ "$status" -eq 0 ]
  [[ "$output" =~ "export AWS_API_KEY=" ]]
  [[ ! "$output" =~ "export TEST_API_KEY=" ]]
  [[ ! "$output" =~ "export SERVICEA_API_KEY=" ]]
}

@test "dump-api-keys filters by pattern with -p flag" {
  run "$DUMP_API_KEYS_SCRIPT" -p "TEST"
  [ "$status" -eq 0 ]
  [[ "$output" =~ "export TEST_API_KEY=" ]]
  [[ ! "$output" =~ "export SERVICEA_API_KEY=" ]]
  [[ ! "$output" =~ "export AWS_API_KEY=" ]]
}

@test "dump-api-keys safe mode generates script header" {
  run "$DUMP_API_KEYS_SCRIPT" --safe
  [ "$status" -eq 0 ]
  [[ "$output" =~ "#!/bin/bash" ]]
  [[ "$output" =~ "Generated by dump-api-keys" ]]
  [[ "$output" =~ "SECURITY NOTES" ]]
}

@test "dump-api-keys safe mode with -s flag" {
  run "$DUMP_API_KEYS_SCRIPT" -s
  [ "$status" -eq 0 ]
  [[ "$output" =~ "#!/bin/bash" ]]
  [[ "$output" =~ "chmod 600" ]]
}

@test "dump-api-keys safe mode includes security warnings" {
  run "$DUMP_API_KEYS_SCRIPT" --safe
  [ "$status" -eq 0 ]
  [[ "$output" =~ "sensitive API keys" ]]
  [[ "$output" =~ "Never commit this file" ]]
  [[ "$output" =~ ".gitignore" ]]
}

@test "dump-api-keys shows security warning to stderr" {
  run "$DUMP_API_KEYS_SCRIPT"
  [ "$status" -eq 0 ]
  [[ "$stderr" =~ "SECURITY WARNING" ]]
  [[ "$stderr" =~ "sensitive API keys" ]]
}

@test "dump-api-keys combines pattern and safe mode" {
  run "$DUMP_API_KEYS_SCRIPT" --pattern "AWS" --safe
  [ "$status" -eq 0 ]
  [[ "$output" =~ "#!/bin/bash" ]]
  [[ "$output" =~ "export AWS_API_KEY=" ]]
  [[ ! "$output" =~ "export TEST_API_KEY=" ]]
}

@test "dump-api-keys handles empty pattern result" {
  run "$DUMP_API_KEYS_SCRIPT" --pattern "NONEXISTENT"
  [ "$status" -eq 0 ]
  [[ "$stderr" =~ "No API keys found matching pattern" ]]
}

@test "dump-api-keys validates service names" {
  # This test would require modifying the mock to include invalid service names
  # For now, we test that valid names are processed correctly
  run "$DUMP_API_KEYS_SCRIPT"
  [ "$status" -eq 0 ]
  # All our mock services should be valid
  [[ "$output" =~ "export TEST_API_KEY=" ]]
}

@test "dump-api-keys escapes special characters in values" {
  # Our mock doesn't have special characters, but we can test the basic functionality
  run "$DUMP_API_KEYS_SCRIPT"
  [ "$status" -eq 0 ]
  # Values should be properly formatted (quotes only when necessary)
  [[ "$output" =~ "=test-api-key-12345" ]]
}

@test "dump-api-keys outputs eval-ready format by default" {
  run "$DUMP_API_KEYS_SCRIPT"
  [ "$status" -eq 0 ]
  # Should start with export statements, not script header
  [[ ! "$output" =~ "#!/bin/bash" ]]
  [[ "$output" =~ "export " ]]
}

@test "dump-api-keys pattern matching is case sensitive" {
  run "$DUMP_API_KEYS_SCRIPT" --pattern "aws"
  [ "$status" -eq 0 ]
  # Should not match AWS_API_KEY with lowercase pattern
  [[ ! "$output" =~ "export AWS_API_KEY=" ]]
}

@test "dump-api-keys pattern supports regex" {
  run "$DUMP_API_KEYS_SCRIPT" --pattern ".*API_KEY$"
  [ "$status" -eq 0 ]
  # Should match all keys ending with API_KEY
  [[ "$output" =~ "export TEST_API_KEY=" ]]
  [[ "$output" =~ "export SERVICEA_API_KEY=" ]]
  [[ "$output" =~ "export AWS_API_KEY=" ]]
}

@test "dump-api-keys shows count information" {
  run "$DUMP_API_KEYS_SCRIPT"
  [ "$status" -eq 0 ]
  # Should export multiple keys
  export_count=$(echo "$output" | grep -c "^export ")
  [ "$export_count" -eq 3 ]
}
